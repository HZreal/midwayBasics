<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>WS connection</title>
</head>
<body>

    <button onclick="openWSConnect()">Open ws connection</button>
    <form action="" onsubmit="sendMessage(event)">
        <input type="text" id="messageText" autocomplete="off"/>
        <button>Send</button>
    </form>
    <button onclick="closeWSConnect()">Close ws connection</button>

    <ul id='messages'>
    </ul>

<script type="text/javascript" charset="utf-8">
    // 创建ws连接
    var ws_text = document.location.protocol == 'https:' ? 'wss' : 'ws';
    //websocket_url = ws_text + '://' + window.location.host + '/chat';
    websocket_url = ws_text + '://' + '127.0.0.1:7001';
    var ws = new WebSocket(websocket_url)

    // 连接时触发
    ws.onopen = (event) => {
        alert('connected !!!')
        console.log('client connected ---- ', event)
    }

    // 接收到来自server端的数据时触发
    ws.onmessage = (event) => {
        var messages = document.getElementById('messages')
        var message = document.createElement('li')
        var content = document.createTextNode(event.data)
        message.appendChild(content)
        messages.appendChild(message)
    };

    // 指定报错时的回调
    ws.onerror = function(event) {
        console.log('connect error ---- ', event)
    };


    // 连接关闭时触发
    ws.onclose = function(event) {
        console.log('client disconnected ---- ', event)
    };

    // 发送
    function sendMessage(event) {
        var input = document.getElementById("messageText")
        // ws发送数据
        console.log("send data, ", input.value)
        ws.send(input.value)
        input.value = ''
        event.preventDefault()
    }

    function openWSConnect() {
        // ws = new WebSocket("ws://localhost:5000/namespace")
    }

    function closeWSConnect() {
        ws.close()
    }

</script>
</body>
</html>
